<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>492</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}		set vText to (input as text)		set searchText to "="	set ASTID to AppleScript's text item delimiters	set AppleScript's text item delimiters to searchText		-- find maximum length of the text to the left of an occurrence of searchText	set vMaxLen to 0	repeat with i from 1 to count paragraphs in vText		set vLine to paragraph i of vText		if vLine contains searchText then			set vString to text item 1 of vLine			set l to (count vString)			repeat until (l is 0 or item l of vString is not space)				set l to l - 1			end repeat			if l is greater than vMaxLen then set vMaxLen to l		end if	end repeat		if vMaxLen is 0 then		-- no lines with searchText		set vResult to vText	else		-- align lines with searchText		set vResult to ""		repeat with i from 1 to count paragraphs in vText			set vLine to paragraph i of vText			if vLine contains searchText then				set vPos to offset of searchText in vLine				set vNrPaddingChars to vMaxLen + 2 - vPos				if vNrPaddingChars is greater than 0 then					-- add padding					set vPadding to text 1 thru vNrPaddingChars of "                                                                                                   "					set vLine to (text 1 thru (vPos - 1) of vLine) &amp; vPadding &amp; (text vPos thru (count vLine) of vLine)				else if vNrPaddingChars is less than 0 then					-- remove padding					set vLine to (text 1 thru vMaxLen of vLine) &amp; " " &amp; (text vPos thru (count vLine) of vLine)				end if			end if			set vResult to vResult &amp; vLine &amp; linefeed		end repeat			end if		if vResult is not equal to "" and the last character of vResult is linefeed and the last character of vText is not linefeed then		-- remove trailing return		set vResult to text 1 thru ((length of vResult) - 1) of vResult	end if		set AppleScript's text item delimiters to ASTID		return vResultend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>2DF1BD0D-8486-4EB2-B2E7-BD93B3D4EAC5</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>72EC6A25-ABFD-4743-9EEF-C95B85063213</string>
				<key>UUID</key>
				<string>AB2C1330-C504-43E0-AF4F-3BD55293BCFA</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>433.500000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarPlay</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
